
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("idПланирования") Тогда
		ИДПланирования = Параметры.idПланирования;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ПолучитьРезультатМаршрутизации",10,Ложь);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПолучитьРезультатМаршрутизации()
	РезультатОбработки = ОбработатьОжидание();
	Если РезультатОбработки Тогда
		ОтключитьОбработчикОжидания("ПолучитьРезультатМаршрутизации");
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОбработатьОжидание()
	//Настройки = ЯМ_РаботаСНастройками.ПолучитьНастройкиМодуля();
	//Ключ = Настройки.КлючAPI_ЯндексМаршрутизация;
	РезультатОбработки = Ложь;
	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id КАК id,
		               |	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса КАК СтатусЗапроса
		               |ИЗ
		               |	РегистрСведений.ЯМ_ЗапросыНаМаршрутизацию.СрезПоследних КАК ЯМ_ЗапросыНаМаршрутизациюСрезПоследних
		               |ГДЕ
		               |	НЕ ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса В (ЗНАЧЕНИЕ(Перечисление.ЯМ_СтатусыЗапросов.Завершен), ЗНАЧЕНИЕ(Перечисление.ЯМ_СтатусыЗапросов.Ошибка))
		               |	И ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id = &ИДПланирования";
		               Запрос.УстановитьПараметр("ИДПланирования",ИДПланирования);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда 
			Выборка = Результат.Выбрать();
			
			Соединение = Новый HTTPСоединение("courier.yandex.ru",,,
			,Новый ИнтернетПрокси(Истина)
			,
			,Новый ЗащищенноеСоединениеOpenSSL);
			
			Пока Выборка.Следующий() Цикл
				РезультатОбработки = ЗагрузитьДанные(Соединение,Выборка.id,"Запрос");				
			КонецЦикла;
		Иначе
			РезультатОбработки = Истина;
		КонецЕсли;
		
		Возврат РезультатОбработки;
		
//		Запрос = Новый Запрос;
//		Запрос.Текст = "ВЫБРАТЬ
//		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id КАК id,
//		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса КАК СтатусЗапроса
//		|ИЗ
//		|	РегистрСведений.ЯМ_ЗапросыНаМаршрутизацию.СрезПоследних(, ) КАК ЯМ_ЗапросыНаМаршрутизациюСрезПоследних
//		|ГДЕ
//		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.Период >= &Период
//		|	И ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id = &ИДПланирования";
//		Запрос.УстановитьПараметр("Период",ТекущаяДатаСеанса() - 43200);
//		 Запрос.УстановитьПараметр("ИДПланирования",ИДПланирования);
//		 
//		Результат = Запрос.Выполнить();
//		Если НЕ Результат.Пустой() Тогда 
//			Выборка = Результат.Выбрать();
//			
//			Соединение = Новый HTTPСоединение("courier.yandex.ru",,,
//			,Новый ИнтернетПрокси(Истина)
//			,
//			,Новый ЗащищенноеСоединениеOpenSSL);
//			
//			Пока Выборка.Следующий() Цикл 
//				АдресДопЗначений = "/vrs/api/v1/children?apikey=" + Ключ + "&parent_task_id=" + Выборка.id;
//				ЗапросДопЗначений = Новый HTTPЗапрос(АдресДопЗначений);
//				ЗапросДопЗначений.Заголовки.Вставить("Content-Type",	"application/json");
//				ЗапросДопЗначений.Заголовки.Вставить("Accept",			"application/json");	
//				
//				Ответ = Соединение.Получить(ЗапросДопЗначений);
//				КодСостояния = Ответ.КодСостояния;
//				
//				Если ТипЗнч(Ответ) = Тип("HTTPОтвет") Тогда 
//					
//					Чтение = Новый ЧтениеJSON;
//					ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку(); 
//					Чтение.УстановитьСтроку(ОтветСтрокой);
//					Результат = ПрочитатьJSON(Чтение);
//					
//					Если НЕ Тип("Массив") = ТипЗНЧ(Результат) И Результат.Свойство("error") Тогда
//						//id = Выборка.id;
//						Сообщение = Результат.error.message;
//						//Статус = "Error";
//					ИначеЕсли НЕ Тип("Массив") = ТипЗНЧ(Результат) И Результат.Свойство("id") Тогда
//						//id = Результат.id;
//						Сообщение = Результат.Message;
//						//Статус = Результат.Status;
//					ИначеЕсли Тип("Массив") = ТипЗНЧ(Результат) Тогда
//						Если Результат.Количество() > 0 Тогда
//							Для Каждого Стр Из Результат Цикл
//								ЗагрузитьДанные(Соединение,Стр.task_id,"Ответ");
//							КонецЦикла;
//						КонецЕсли;
//					КонецЕсли;
//					//ЗаписатьДанныеЗапросаНаСервере(id, Статус, Сообщение);
//					
//				Иначе
//					
//					// при необходимости реализовать логирование ошибки формирования запроса
//					
//				КонецЕсли;
//				
//			КонецЦикла;
//			
//		КонецЕсли;
КонецФункции

&НаСервере
Функция ЗагрузитьДанные(Соединение,ИД,Тип)
	
	Адрес = "/vrs/api/v1/result/mvrp/" + ИД;
	
	Запрос = Новый HTTPЗапрос(Адрес);
	Запрос.Заголовки.Вставить("Content-Type",	"application/json");
	Запрос.Заголовки.Вставить("Accept",			"application/json");
	
	// формирование запроса
	Ответ = Соединение.Получить(Запрос);
	//КодСостояния = Ответ.КодСостояния;
	
	Если ТипЗнч(Ответ) = Тип("HTTPОтвет") Тогда 
		
		Чтение = Новый ЧтениеJSON;
		ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку(); 
		Чтение.УстановитьСтроку(ОтветСтрокой);
		Результат = ПрочитатьJSON(Чтение);
		
		Если Результат.Свойство("error") Тогда
			id = ИД;
			Сообщение = Результат.error.message;
			Статус = "Error";
			Возврат Ложь;
		ИначеЕсли Результат.Свойство("id") Тогда
			id = ИД;
			Сообщение = Результат.Message;
			Статус = Результат.Status;
			Возврат Истина;
		КонецЕсли;
		ЗаписатьДанныеЗапросаНаСервере(id, Статус, Сообщение,Тип);
		
	Иначе	
		// при необходимости реализовать логирование ошибки формирования запроса
		Возврат Ложь;	
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеЗапросаНаСервере(id, Статус = Неопределено, Сообщение,тип)
	Выполнить("ЯМ_МаршрутизацияСервер.ЗаписатьДанныеЗапроса(id, Статус, Сообщение,тип)");	
КонецПроцедуры