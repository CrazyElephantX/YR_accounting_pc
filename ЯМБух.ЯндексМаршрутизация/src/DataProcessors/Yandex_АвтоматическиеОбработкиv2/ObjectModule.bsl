
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");
	
	ПараметрыРегистрации.Вставить("Наименование", "Yandex - Автоматические обработки данных");
	ПараметрыРегистрации.Вставить("Версия", "2.1");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", "Yandex - Автоматические обработки данных");
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд,
	"Yandex - Автоматические обработки данных",
	"YandexАвтоматическиеОбработкиДанных",
	"ВызовСерверногоМетода",
	Истина,"");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

Процедура ВыполнитьКоманду(Идентификатор, ОбъектыНазначения = Неопределено) Экспорт
	
	// Для дополнительной информации при доработках запросов необходимо обращаться 
	// к инструкциям по адресу https://yandex.ru/routing/doc/vrp/
	
	Настройки = ЯМ_РаботаСНастройками.ПолучитьНастройкиМодуля();
	Ключ = Настройки.КлючAPI_ЯндексМаршрутизация;
	//Ключ = Настройки.Токен_ЯндексМониторинг;
	
	Если Идентификатор = "YandexАвтоматическиеОбработкиДанных" Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id КАК id,
		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса КАК СтатусЗапроса
		|ИЗ
		|	РегистрСведений.ЯМ_ЗапросыНаМаршрутизацию.СрезПоследних КАК ЯМ_ЗапросыНаМаршрутизациюСрезПоследних
		|ГДЕ
		|	НЕ ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса В(ЗНАЧЕНИЕ(Перечисление.ЯМ_СтатусыЗапросов.Завершен), ЗНАЧЕНИЕ(Перечисление.ЯМ_СтатусыЗапросов.Ошибка))";
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда 
			Выборка = Результат.Выбрать();
			
			Соединение = Новый HTTPСоединение("courier.yandex.ru",,,
			,Новый ИнтернетПрокси(Истина)
			,
			,Новый ЗащищенноеСоединениеOpenSSL);
			
			Пока Выборка.Следующий() Цикл
				ЗагрузитьДанные(Соединение,Выборка.id,"Запрос");				
			КонецЦикла;
			
		КонецЕсли;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.id КАК id,
		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.СтатусЗапроса КАК СтатусЗапроса
		|ИЗ
		|	РегистрСведений.ЯМ_ЗапросыНаМаршрутизацию.СрезПоследних(, ) КАК ЯМ_ЗапросыНаМаршрутизациюСрезПоследних
		|ГДЕ
		|	ЯМ_ЗапросыНаМаршрутизациюСрезПоследних.Период >= &Период";
		Запрос.УстановитьПараметр("Период",ТекущаяДатаСеанса() - 43200);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда 
			Выборка = Результат.Выбрать();
			
			Соединение = Новый HTTPСоединение("courier.yandex.ru",,,
			,Новый ИнтернетПрокси(Истина)
			,
			,Новый ЗащищенноеСоединениеOpenSSL);
			
			Пока Выборка.Следующий() Цикл 
				АдресДопЗначений = "/vrs/api/v1/children?apikey=" + Ключ + "&parent_task_id=" + Выборка.id;
				ЗапросДопЗначений = Новый HTTPЗапрос(АдресДопЗначений);
				ЗапросДопЗначений.Заголовки.Вставить("Content-Type",	"application/json");
				ЗапросДопЗначений.Заголовки.Вставить("Accept",			"application/json");	
				
				Ответ = Соединение.Получить(ЗапросДопЗначений);
				КодСостояния = Ответ.КодСостояния;
				
				Если ТипЗнч(Ответ) = Тип("HTTPОтвет") Тогда 
					
					Чтение = Новый ЧтениеJSON;
					ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку(); 
					Чтение.УстановитьСтроку(ОтветСтрокой);
					Результат = ПрочитатьJSON(Чтение);
					
					Если НЕ Тип("Массив") = ТипЗНЧ(Результат) И Результат.Свойство("error") Тогда
						//id = Выборка.id;
						Сообщение = Результат.error.message;
						//Статус = "Error";
					ИначеЕсли НЕ Тип("Массив") = ТипЗНЧ(Результат) И Результат.Свойство("id") Тогда
						//id = Результат.id;
						Сообщение = Результат.Message;
						//Статус = Результат.Status;
					ИначеЕсли Тип("Массив") = ТипЗНЧ(Результат) Тогда
						Если Результат.Количество() > 0 Тогда
							Для Каждого Стр Из Результат Цикл
								ЗагрузитьДанные(Соединение,Стр.task_id,"Ответ");
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
					//ЗаписатьДанныеЗапросаНаСервере(id, Статус, Сообщение);
					
				Иначе
					
					// при необходимости реализовать логирование ошибки формирования запроса
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьДанные(Соединение,ИД,Тип)
	
	Адрес = "/vrs/api/v1/result/mvrp/" + ИД;
	
	Запрос = Новый HTTPЗапрос(Адрес);
	Запрос.Заголовки.Вставить("Content-Type",	"application/json");
	Запрос.Заголовки.Вставить("Accept",			"application/json");
	
	// формирование запроса
	Ответ = Соединение.Получить(Запрос);
	//КодСостояния = Ответ.КодСостояния;
	
	Если ТипЗнч(Ответ) = Тип("HTTPОтвет") Тогда 
		
		Чтение = Новый ЧтениеJSON;
		ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку(); 
		Чтение.УстановитьСтроку(ОтветСтрокой);
		Результат = ПрочитатьJSON(Чтение);
		
		Если Результат.Свойство("error") Тогда
			id = ИД;
			Сообщение = Результат.error.message;
			Статус = "Error";
		ИначеЕсли Результат.Свойство("id") Тогда
			id = ИД;
			Сообщение = Результат.Message;
			Статус = Результат.Status;
		КонецЕсли;
		ЗаписатьДанныеЗапросаНаСервере(id, Статус, Сообщение,Тип);
		
	Иначе	
		// при необходимости реализовать логирование ошибки формирования запроса	
	КонецЕсли;
КонецПроцедуры

Процедура ЗаписатьДанныеЗапросаНаСервере(id, Статус = Неопределено, Сообщение,тип)
	Выполнить("ЯМ_МаршрутизацияСервер.ЗаписатьДанныеЗапроса(id, Статус, Сообщение,тип)");	
КонецПроцедуры
